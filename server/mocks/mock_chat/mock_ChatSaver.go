// Code generated by mockery v2.42.3. DO NOT EDIT.

package mock_chat

import (
	context "context"

	model "github.com/dvid-messanger/internal/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// MockChatSaver is an autogenerated mock type for the ChatSaver type
type MockChatSaver struct {
	mock.Mock
}

type MockChatSaver_Expecter struct {
	mock *mock.Mock
}

func (_m *MockChatSaver) EXPECT() *MockChatSaver_Expecter {
	return &MockChatSaver_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: ctx, from, to
func (_m *MockChatSaver) Save(ctx context.Context, from []byte, to []byte) (model.Chat, error) {
	ret := _m.Called(ctx, from, to)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 model.Chat
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []byte, []byte) (model.Chat, error)); ok {
		return rf(ctx, from, to)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []byte, []byte) model.Chat); ok {
		r0 = rf(ctx, from, to)
	} else {
		r0 = ret.Get(0).(model.Chat)
	}

	if rf, ok := ret.Get(1).(func(context.Context, []byte, []byte) error); ok {
		r1 = rf(ctx, from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockChatSaver_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type MockChatSaver_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//   - ctx context.Context
//   - from []byte
//   - to []byte
func (_e *MockChatSaver_Expecter) Save(ctx interface{}, from interface{}, to interface{}) *MockChatSaver_Save_Call {
	return &MockChatSaver_Save_Call{Call: _e.mock.On("Save", ctx, from, to)}
}

func (_c *MockChatSaver_Save_Call) Run(run func(ctx context.Context, from []byte, to []byte)) *MockChatSaver_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]byte), args[2].([]byte))
	})
	return _c
}

func (_c *MockChatSaver_Save_Call) Return(_a0 model.Chat, _a1 error) *MockChatSaver_Save_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockChatSaver_Save_Call) RunAndReturn(run func(context.Context, []byte, []byte) (model.Chat, error)) *MockChatSaver_Save_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockChatSaver creates a new instance of MockChatSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockChatSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockChatSaver {
	mock := &MockChatSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
