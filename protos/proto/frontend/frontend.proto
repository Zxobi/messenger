syntax = "proto3";

package frontend;

import "protocol/protocol.proto";

option go_package = "github.com/dvid-messanger/protos/gen/frontend;frontendv1";

enum DownstreamType {
  D_ECHO = 0;

  D_LOGIN = 10;

  D_GET_USER = 20;
  D_GET_USERS = 21;
  D_REG_USER = 22;
  D_CUR_USER = 23;

  D_GET_CHAT = 30;
  D_GET_USER_CHATS = 31;
  D_CREATE_CHAT = 32;

  D_SEND_MESSAGE = 40;
  D_NEW_MESSAGE = 41;
  D_CHAT_MESSAGES = 45;
}

enum UpstreamType {
  U_ECHO = 0;

  U_LOGIN = 10;

  U_GET_USER = 20;
  U_GET_USERS = 21;
  U_REG_USER = 22;
  U_CUR_USER = 24;

  U_GET_CHAT = 30;
  U_GET_USER_CHATS = 31;
  U_CREATE_CHAT = 32;

  U_SEND_MESSAGE = 40;
  U_CHAT_MESSAGES = 45;
}

message Upstream {
  UpstreamType type = 1;
  bytes payload = 2;
}

message Downstream {
  DownstreamType type = 1;
  DownstreamError error = 2;
  bytes payload = 3;
}

enum ErrorCode {
  UNAUTHORIZED = 0;
}

message DownstreamError {
  ErrorCode code = 1;
  string desc = 2;
}

message UpstreamEcho {
  string content = 1;
}

message DownstreamEcho {
  string content = 1;
}

message UpstreamGetUser {
  bytes uid = 1;
}

message DownstreamGetUser {
  protocol.User user = 1;
}

message UpstreamCurUser {
}

message DownstreamCurUser {
  protocol.User user = 1;
}

message UpstreamGetUsers {
}

message DownstreamGetUsers {
  repeated protocol.User users = 1;
}

message UpstreamRegUser {
  string email = 1;
  string password = 2;
  string bio = 3;
}

message DownstreamRegUser {
  protocol.User user = 1;
}

message UpstreamLogin {
  string email = 1;
  string password = 2;
}

message DownstreamLogin {
  string token = 1;
}

message UpstreamGetChat {
  bytes cid = 1;
}

message DownstreamGetChat {
  protocol.Chat chat = 1;
}

message UpstreamGetUserChats {
}

message DownstreamGetUserChats {
  repeated protocol.Chat chats = 1;
}

message UpstreamCreateChat {
  bytes uid = 1;
}

message DownstreamCreateChat {
  protocol.Chat chat = 1;
}

message UpstreamSendMessage {
  bytes cid = 1;
  string text = 2;
}

message DownstreamSendMessage {
  protocol.ChatMessage message = 1;
}

message DownstreamNewMessage {
  protocol.ChatMessage message = 1;
}

message UpstreamChatMessages {
  bytes cid = 1;
}

message DownstreamChatMessages {
  repeated protocol.ChatMessage messages = 1;
}